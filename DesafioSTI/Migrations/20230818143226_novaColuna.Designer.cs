// <auto-generated />
using System;
using DesafioSTI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioSTI.Migrations
{
    [DbContext(typeof(DesafioDbContexto))]
    [Migration("20230818143226_novaColuna")]
    partial class novaColuna
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("DesafioSTI.Data.Consulta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoenteID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especialidade")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("frequentada")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DoenteID");

                    b.ToTable("Consulta", (string)null);
                });

            modelBuilder.Entity("DesafioSTI.Data.Doente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoDeProcesso")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Doente", (string)null);
                });

            modelBuilder.Entity("DesafioSTI.Data.Consulta", b =>
                {
                    b.HasOne("DesafioSTI.Data.Doente", "Doente")
                        .WithMany()
                        .HasForeignKey("DoenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doente");
                });
#pragma warning restore 612, 618
        }
    }
}
